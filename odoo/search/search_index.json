{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Odoo Technical Notes Sebuah entitas bisnis yang sudah dapat menjalankan aktifitas bisninsnya dengan baik biasanya akan memerlukan peralatan-peralatan tambahan yang dapat membuat bisnisnya berjalan lebih efektif dan mempermudah pengelolaan bisnis itu sendiri. Odoo adalah sebuah all-in-one management software (sepaket perangkat lunak manajemen) yang menawarkan perangkat terintegrasi untuk manajemen perusahaan seperti CRM, Website, e-Commerce, Accounting, Sales, Purchase, Inventory, Manufacture, dan lain sebagainya. Disini berisi catatan-catatan tentang development Odoo.","title":"Pengenalan"},{"location":"#odoo-technical-notes","text":"Sebuah entitas bisnis yang sudah dapat menjalankan aktifitas bisninsnya dengan baik biasanya akan memerlukan peralatan-peralatan tambahan yang dapat membuat bisnisnya berjalan lebih efektif dan mempermudah pengelolaan bisnis itu sendiri. Odoo adalah sebuah all-in-one management software (sepaket perangkat lunak manajemen) yang menawarkan perangkat terintegrasi untuk manajemen perusahaan seperti CRM, Website, e-Commerce, Accounting, Sales, Purchase, Inventory, Manufacture, dan lain sebagainya. Disini berisi catatan-catatan tentang development Odoo.","title":"Odoo Technical Notes"},{"location":"about/","text":"","title":"About"},{"location":"arsitektur/","text":"Architecture Client layer Client layer adalah layer yang diakses pada sisi user, bisa dikatakan sebagai presentation layer. Layer ini adalah layer antarmuka (user interface) kepada user. Business layer Business layer adalah layer yang berguna sebagai penengah antara data layer dan client layer. Layer ini disebut juga intermediary layer. Layer ini menjalankan business logic yang dideklarasikan seperti validasi data, perhitungan, dan memasukkan data ke database. Data layer Data layer atau disebut juga Data access layer digunakan untuk menyimpan data. Teknologi Secara teknikal berikut adalah teknologi yang digunakan pada Odoo. Python Python adalah sebuah bahasa pemrograman yang bersifat terbuka. Odoo menggunakan bahasa pemrograman Python sebagai business logic dan business object pada aplikasinya. Selain itu secara khusus file Python juga digunakan sebagai manifest untuk mengetahui informasi modul. Untuk Odoo dibawah versi 11 menggunakan Python versi 2.7, sedangkan versi 11 dan yang terbaru menggunakan Python versi 3. Sebuah kebiasaan yang baik apabila di baris pertama file python yang kita buat dimulai dengan berikut: # -*- coding: utf-8 -*- Gunanya adalah menandakan skrip pada file menggunakan unicode UTF-8, sehingga menghindari error ketika menggunakan karakter yang tidak ada pada ANSI. * PostgreSQL Odoo menggunakan PostgreSQL sebagai database untuk datanya. Versi yang digunakan adalah versi 9.6. Pada Odoo, developer tidak membuat, menginisialisasi database untuk digunakan Odoo, akan tetapi menggunakan platform Odoo untuk membuat database dan Odoo akan otomatis membuat tabel yang akan digunakan. Begitu juga melakukan pembuatan field atau mengubah field dilakukan melalui file Python. Membuat database Odoo dapat dilakukan langsung dengan cara membuka Odoo dan klik tombol Create Database pada database manager. Secara otomatis modul yang ada pada addons path (folder untuk menyimpan modul) dapat dilihat di menu Apps. Erlangga Indra Permana erlaangga.github.ioTraining Odoo Technical Secara konvensi, email dan password Odoo secara default untuk development adalah admin yang sekaligus akan menjadi superuser pada user Odoo. Language diisi dengan English sebagai default. Country diisi sesuai negara kita tinggal. Ketika \u201cLoad demonstration data\u201d dicentang maka akan memuat data demo pada modul sebagai data dummy untuk mengetes fungsional modul. Markup Language (XML) Bahasa markup atau Markup languange digunakan sebagai penanda pada suatu data, yang paling umum kita temui adalah HTML saat kita berselancar pada dunia maya. Apa yang kita lihat di browser saat kita berselancar sebenarnya adalah data pada markup yang di-parsing pada browser sehingga menghasilkan sebuah tampilan. Bahasa markup juga biasanya memiliki struktur hierarki seperti pohon, yang artinya sebuah tag harus mempunyai struktur yang berurutan. Tidak jauh berbeda pada browser yang mengubah HTML menjadi sebuah tampilan, pada Odoo ekstensi file berupa XML digunakan untuk mendeklarasikan data yang berisi menu, action, tampilan, atau pun data untuk suatu model. Data berupa menu, action, dan tampilan akan diubah menjadi menu dan tampilan yang akan menjadi tempat bagi data-data untuk ditampilkan. <odoo> <!-- pembuka --> <data> <!-- pembuka --> <record model=\"{nama model}\" id=\"{record identifier}\"> <!-- deklarasi record --> <field name=\"{nama field}\">{nilai}</field> <!-- nilai field-nya --> </record> </data> </odoo> Di atas adalah contoh dari struktur isi file xml untuk Odoo. Sebuah bahasa markup mempunyai elemen (tag) dan di dalam tag dapat berisi atribut. Seperti contoh tag record mempunyai atribut model dan id, sedangkan tag <field> memiliki atribut name. Sebuah id pada record dalam satu modul tidak boleh sama. Hal ini akan berpengaruh saat external identifier (id ekternal) suatu modul diacu. Format id ekternal adalah nama_modul.id_record. Ketika sebuah modul di-upgrade, data pada XML dimuat ulang yang membuat data akan berubah. Kita dapat mencegah hal tersebut dengan menambahkan atribut noupdate yang bernilai True pada elemen data menjadi seperti berikut: <data noupdate=\u201d1\u201d> CSV CSV adalah File CSV pada Odoo mirip kegunaan XML untuk memasukkan data. Sedikit berbeda pada CSV jika pada XML kita dapat memasukkan data ke dalam model dengan mengisi nilai atribut model pada tag record, pada CSV kita hanya dapat menyimpan data untuk satu model untuk satu file CSV. Contohnya ketika ingin menyimpan data dengan file csv pada model ir.model.access maka kita harus membuat file ir.model.access.csv dan berisi kolom (field) serta nilai dari setiap barisnya untuk field tersebut. Framework Framework secara bahasa berarti kerangka kerja. Secara istilah pemrograman framework adalah suatu kumpulan library atau paket program yang mempunyai fungsi-fungsi dan aturan-aturan yang berguna untuk mempercepat pembuatan suatu program aplikasi. Framework dalam dunia nyata mirip seperti cetakan kue. Ketika kita ingin membuat kue dengan bentuk bintang maka adonan akan mengikuti cetakan tersebut. Namun kita pun dapat menambahkan hiasan pada kue kita sesuai selera, seperti tambahan kacang, coklat, karamel, dan lain-lain. Tatkala kita sudah mulai melakukan pemrograman dengan framework maka kita pun harus mengikuti aturan atau tata cara yang diatur dari sebuah framework. Begitu juga Odoo, ketika kita menggunakan framework Odoo kita pun harus berpikir untuk menyesuaikan diri dengan aturan-aturan pada Odoo yang sudah dibuat. Jika kita mengetahui framework berjenis MVC (Model, View, Controller), tugas Python disini adalah berkomunikasi dengan database sebagai jembatan dan controller dari interaksi di antarmuka, sedangkan XML berguna sebagai view yang akan dibuat dari data di XML menjadi sebuah tampilan HTML yang menempatkan data data. Inilah maksud dari MVC: Model, mendefinisikan struktur data View, mendefinisikan tampilan Controller, mengatur business logic dari aplikasi Menggunakan framework Odoo kurang lebih hanya mengikuti template yang sudah dibuat Odoo.","title":"Arsitektur"},{"location":"arsitektur/#architecture","text":"Client layer Client layer adalah layer yang diakses pada sisi user, bisa dikatakan sebagai presentation layer. Layer ini adalah layer antarmuka (user interface) kepada user. Business layer Business layer adalah layer yang berguna sebagai penengah antara data layer dan client layer. Layer ini disebut juga intermediary layer. Layer ini menjalankan business logic yang dideklarasikan seperti validasi data, perhitungan, dan memasukkan data ke database. Data layer Data layer atau disebut juga Data access layer digunakan untuk menyimpan data.","title":"Architecture"},{"location":"arsitektur/#teknologi","text":"Secara teknikal berikut adalah teknologi yang digunakan pada Odoo. Python Python adalah sebuah bahasa pemrograman yang bersifat terbuka. Odoo menggunakan bahasa pemrograman Python sebagai business logic dan business object pada aplikasinya. Selain itu secara khusus file Python juga digunakan sebagai manifest untuk mengetahui informasi modul. Untuk Odoo dibawah versi 11 menggunakan Python versi 2.7, sedangkan versi 11 dan yang terbaru menggunakan Python versi 3. Sebuah kebiasaan yang baik apabila di baris pertama file python yang kita buat dimulai dengan berikut: # -*- coding: utf-8 -*- Gunanya adalah menandakan skrip pada file menggunakan unicode UTF-8, sehingga menghindari error ketika menggunakan karakter yang tidak ada pada ANSI. * PostgreSQL Odoo menggunakan PostgreSQL sebagai database untuk datanya. Versi yang digunakan adalah versi 9.6. Pada Odoo, developer tidak membuat, menginisialisasi database untuk digunakan Odoo, akan tetapi menggunakan platform Odoo untuk membuat database dan Odoo akan otomatis membuat tabel yang akan digunakan. Begitu juga melakukan pembuatan field atau mengubah field dilakukan melalui file Python. Membuat database Odoo dapat dilakukan langsung dengan cara membuka Odoo dan klik tombol Create Database pada database manager. Secara otomatis modul yang ada pada addons path (folder untuk menyimpan modul) dapat dilihat di menu Apps. Erlangga Indra Permana erlaangga.github.ioTraining Odoo Technical Secara konvensi, email dan password Odoo secara default untuk development adalah admin yang sekaligus akan menjadi superuser pada user Odoo. Language diisi dengan English sebagai default. Country diisi sesuai negara kita tinggal. Ketika \u201cLoad demonstration data\u201d dicentang maka akan memuat data demo pada modul sebagai data dummy untuk mengetes fungsional modul. Markup Language (XML) Bahasa markup atau Markup languange digunakan sebagai penanda pada suatu data, yang paling umum kita temui adalah HTML saat kita berselancar pada dunia maya. Apa yang kita lihat di browser saat kita berselancar sebenarnya adalah data pada markup yang di-parsing pada browser sehingga menghasilkan sebuah tampilan. Bahasa markup juga biasanya memiliki struktur hierarki seperti pohon, yang artinya sebuah tag harus mempunyai struktur yang berurutan. Tidak jauh berbeda pada browser yang mengubah HTML menjadi sebuah tampilan, pada Odoo ekstensi file berupa XML digunakan untuk mendeklarasikan data yang berisi menu, action, tampilan, atau pun data untuk suatu model. Data berupa menu, action, dan tampilan akan diubah menjadi menu dan tampilan yang akan menjadi tempat bagi data-data untuk ditampilkan. <odoo> <!-- pembuka --> <data> <!-- pembuka --> <record model=\"{nama model}\" id=\"{record identifier}\"> <!-- deklarasi record --> <field name=\"{nama field}\">{nilai}</field> <!-- nilai field-nya --> </record> </data> </odoo> Di atas adalah contoh dari struktur isi file xml untuk Odoo. Sebuah bahasa markup mempunyai elemen (tag) dan di dalam tag dapat berisi atribut. Seperti contoh tag record mempunyai atribut model dan id, sedangkan tag <field> memiliki atribut name. Sebuah id pada record dalam satu modul tidak boleh sama. Hal ini akan berpengaruh saat external identifier (id ekternal) suatu modul diacu. Format id ekternal adalah nama_modul.id_record. Ketika sebuah modul di-upgrade, data pada XML dimuat ulang yang membuat data akan berubah. Kita dapat mencegah hal tersebut dengan menambahkan atribut noupdate yang bernilai True pada elemen data menjadi seperti berikut: <data noupdate=\u201d1\u201d> CSV CSV adalah File CSV pada Odoo mirip kegunaan XML untuk memasukkan data. Sedikit berbeda pada CSV jika pada XML kita dapat memasukkan data ke dalam model dengan mengisi nilai atribut model pada tag record, pada CSV kita hanya dapat menyimpan data untuk satu model untuk satu file CSV. Contohnya ketika ingin menyimpan data dengan file csv pada model ir.model.access maka kita harus membuat file ir.model.access.csv dan berisi kolom (field) serta nilai dari setiap barisnya untuk field tersebut. Framework Framework secara bahasa berarti kerangka kerja. Secara istilah pemrograman framework adalah suatu kumpulan library atau paket program yang mempunyai fungsi-fungsi dan aturan-aturan yang berguna untuk mempercepat pembuatan suatu program aplikasi. Framework dalam dunia nyata mirip seperti cetakan kue. Ketika kita ingin membuat kue dengan bentuk bintang maka adonan akan mengikuti cetakan tersebut. Namun kita pun dapat menambahkan hiasan pada kue kita sesuai selera, seperti tambahan kacang, coklat, karamel, dan lain-lain. Tatkala kita sudah mulai melakukan pemrograman dengan framework maka kita pun harus mengikuti aturan atau tata cara yang diatur dari sebuah framework. Begitu juga Odoo, ketika kita menggunakan framework Odoo kita pun harus berpikir untuk menyesuaikan diri dengan aturan-aturan pada Odoo yang sudah dibuat. Jika kita mengetahui framework berjenis MVC (Model, View, Controller), tugas Python disini adalah berkomunikasi dengan database sebagai jembatan dan controller dari interaksi di antarmuka, sedangkan XML berguna sebagai view yang akan dibuat dari data di XML menjadi sebuah tampilan HTML yang menempatkan data data. Inilah maksud dari MVC: Model, mendefinisikan struktur data View, mendefinisikan tampilan Controller, mengatur business logic dari aplikasi Menggunakan framework Odoo kurang lebih hanya mengikuti template yang sudah dibuat Odoo.","title":"Teknologi"},{"location":"development/","text":"Development Development pada Odoo sebenarnya mudah jika kita mengikuti alur development yang sudah ditentukan. Struktur Modul data/ <nama_model>_data.xml # data untuk model security/ <nama_model>_security.xml # nama group dan rule ir.model.access.csv # file csv ir.model.access models/ __init__.py # initialisasi objek python <nama_model>.py # file model views/ <nama_model>_views.xml # data model untuk tampilan, action, dan menu wizard/ __init__.py # initialisasi objek python <nama_model>_wizard.py # file model <nama_model>_views.xml # file views __init__.py # initialisasi objek python __manifest__.py # manifest atau informasi mengenai modul","title":"Development"},{"location":"development/#development","text":"Development pada Odoo sebenarnya mudah jika kita mengikuti alur development yang sudah ditentukan.","title":"Development"},{"location":"development/#struktur-modul","text":"data/ <nama_model>_data.xml # data untuk model security/ <nama_model>_security.xml # nama group dan rule ir.model.access.csv # file csv ir.model.access models/ __init__.py # initialisasi objek python <nama_model>.py # file model views/ <nama_model>_views.xml # data model untuk tampilan, action, dan menu wizard/ __init__.py # initialisasi objek python <nama_model>_wizard.py # file model <nama_model>_views.xml # file views __init__.py # initialisasi objek python __manifest__.py # manifest atau informasi mengenai modul","title":"Struktur Modul"}]}